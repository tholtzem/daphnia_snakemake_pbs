#! /bin/bash

#######
#Simple Example for array job with PBS
#######
#Run as_ qsub <jobscriptname>
#######

#Name of the job
#Name of the job
#PBS -N bbmap_HiC

# Redirect output stream to this file.
#PBS -o bbmap_HiC.o

# Redirect error stream to this file.
#PBS -e bbmap_HiC.e 

# Send status information to this email address.
#PBS -M tania.holtzem@hotmail.de

# Send an e-mail when the job is done.
#PBS -m e

##PBS -q workq #or f2800 or f2100
#PBS -q f2800

#PBS -l select=1:ncpus=12:mem=120g 
#select one chunk with 2 cpus and 10 gigabyte memory (max for mem=20347869088kb or 19405g on Mach-2); for e.g. 3 chunks_ select=3:ncpus=12:mem=220g or combined: -l select=6:ncpus=2:mem=4gb+3:ncpus=8:mem=4GB  

#PBS -l walltime=240:00:00

# job submission with input file(s): qsub -v INFILE=/tmp/myinfile, INDATA=/tmp/mydata <job script>
# refer to input file(s) as $INFILE and $INDATA in the script

#############################################

#Some job details
echo Working directory is $PBS_O_WORKDIR

cd $PBS_O_WORKDIR

echo Running on host `hostname`
echo Time is `date`
echo Directory is `pwd`

echo Nodes file is $PBS_NODEFILE
echo cat $PBS_NODEFILE

echo OMP threads is $OMP_NUM_THREADS

echo Number of CPUs is $NCPUS

echo The array job index is $PBS_ARRAY_INDEX


#############################################
module load Anaconda3/2021.04/miniconda-base-2021.04
source $UIBK_CONDA_PROFILE
conda activate da


path2in=/home/uibk/c7701125/scratch/EXCHANGE/CLONE_DATA/KRAKEN2
path2out=/home/uibk/c7701178/scratch/DAPHNIA/daphnia_snakemake_pbs/bbmap/HiC
SAMPLETABLE=/home/uibk/c7701178/scratch/DAPHNIA/daphnia_snakemake_pbs/list/reference_clones_readgroups_sorted_uniq.tsv
REF=/home/uibk/c7701178/scratch/DAPHNIA/daphnia_snakemake_pbs/ref/Dgaleata_M5_PBasm.FINAL.fa
sta
path2log=(/home/uibk/c7701178/scratch/DAPHNIA/daphnia_snakemake_pbs/log)

i=$PBS_ARRAY_INDEX
echo This is the PBs Index: $PBS_ARRAY_INDEX
echo This is my counter: $i

cd $path2in/
MATE1=(*R_1.trmdfilt.keep.fastq.gz)
MATE2=(*R_2.trmdfilt.keep.fastq.gz)
#echo ${MATE1[@]}
#echo ${MATE2[@]}
#echo ${#MATE1[@]}

id=$(echo ${MATE1[$i]} | sed -e "s/_R_1.trmdfilt.keep.fastq.gz$//")
echo $id

RG_ID=`grep -P "${id}\t" $SAMPLETABLE | cut -f 9`
RG_LB=`grep -P "${id}\t" $SAMPLETABLE | cut -f 13`
RG_SM=`grep -P "${id}\t" $SAMPLETABLE | cut -f 11`
RG_PL=`grep -P "${id}\t" $SAMPLETABLE | cut -f 12`
RG_PU=`grep -P "${id}\t" $SAMPLETABLE | cut -f 10`

echo $RG_ID
echo $RG_LB
echo $RG_SM
echo $RG_PL
echo $RG_PU

echo /apps/uibk/bin/sysconfcpus -n 24 bbmap.sh -Xmx200g t={threads} ref=$REF in1=$path2in/$id in2=$path2in/$id out=$path2out/$id minid=0.76 k=13 bw=0 ordered=t rgid=$RG_ID rglb=$RG_LB rgsm=$RG_SM rgpl=$RG_PL rgpu=$RG_PU overwrite=f unpigz=t #2> log/$id.bb.bam
